{
	"info": {
		"_postman_id": "454382a3-caf7-4551-9b7a-7263be121d4f",
		"name": "8. API SUNAT - Guías de Remisión",
		"description": "Colección completa para probar las guías de remisión electrónicas con la API SUNAT v1. Incluye ejemplos para transporte público, privado, traslados entre establecimientos y validaciones.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20633485"
	},
	"item": [
		{
			"name": "1. Catálogos y Referencias",
			"item": [
				{
					"name": "Obtener Motivos de Traslado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has transfer reasons\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data).to.be.an('array');",
									"    pm.expect(responseJson.data.length).to.be.greaterThan(10);",
									"});",
									"",
									"pm.test(\"Has required transfer reason codes\", function () {",
									"    const responseJson = pm.response.json();",
									"    const codes = responseJson.data.map(item => item.code);",
									"    pm.expect(codes).to.include('01'); // Venta",
									"    pm.expect(codes).to.include('02'); // Compra",
									"    pm.expect(codes).to.include('04'); // Traslado entre establecimientos",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 2|sunat_beta_xtqz6Ix1SxUITCuBiS7KTEUkXZjrAhO7fzrW5Yd10efe4332",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/catalogs/transfer-reasons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"catalogs",
								"transfer-reasons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener Modalidades de Transporte",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has transport modes\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data).to.be.an('array');",
									"    pm.expect(responseJson.data.length).to.equal(2);",
									"});",
									"",
									"pm.test(\"Has public and private transport\", function () {",
									"    const responseJson = pm.response.json();",
									"    const codes = responseJson.data.map(item => item.code);",
									"    pm.expect(codes).to.include('01'); // Transporte público",
									"    pm.expect(codes).to.include('02'); // Transporte privado",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer 2|sunat_beta_xtqz6Ix1SxUITCuBiS7KTEUkXZjrAhO7fzrW5Yd10efe4332",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/catalogs/transport-modes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"catalogs",
								"transport-modes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Crear Guías de Remisión",
			"item": [
				{
					"name": "Crear Guía - Transporte Privado (Venta)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Dispatch guide created successfully\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.id).to.exist;",
									"    pm.expect(responseJson.data.mod_traslado).to.equal('02');",
									"    pm.expect(responseJson.data.peso_total).to.equal(45.5);",
									"});",
									"",
									"// Guardar ID para siguientes requests",
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('dispatch_guide_private_id', responseJson.data.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 2|sunat_beta_SROYaUQGZJ6XbH1lAO4DjjATZk05iupYDjw6onWGae97ebbf",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n  {\n      \"company_id\": 1,\n      \"branch_id\": 1,\n      \"destinatario_id\": 2,\n      \"serie\": \"T001\",\n      \"fecha_emision\": \"2025-09-07\",\n      \"fecha_traslado\": \"2025-09-08\",\n\n      \"cod_traslado\": \"01\",\n      \"des_traslado\": \"Venta\",\n      \"mod_traslado\": \"02\",\n      \"peso_total\": 12.5,\n      \"und_peso_total\": \"KGM\",\n      \"num_bultos\": 1,\n\n      \"partida_ubigeo\": \"150203\",\n      \"partida_direccion\": \"AV ITALIA\",\n      \"llegada_ubigeo\": \"150101\",\n      \"llegada_direccion\": \"AV LIMA\",\n\n      \"vehiculo_placa\": \"ABC123\",\n      \"vehiculo_placa_secundaria\": \"ABI456\",\n\n      \"conductor_tipo\": \"Principal\",\n      \"conductor_tipo_doc\": \"1\",\n      \"conductor_num_doc\": \"44004400\",\n      \"conductor_licencia\": \"0001122020\",\n      \"conductor_nombres\": \"ROBERTO\",\n      \"conductor_apellidos\": \"RODRIGUEZ VALENCIA\",\n\n      \"detalles\": [\n          {\n              \"cantidad\": 2,\n              \"unidad\": \"ZZ\",\n              \"descripcion\": \"PROD 1\",\n              \"codigo\": \"PROD1\",\n              \"peso_total\": 12.5\n          }\n      ],\n\n      \"usuario_creacion\": \"POSTMAN_TEST\"\n  }"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Guía - Transporte Público (Compra)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Public transport dispatch guide created\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.mod_traslado).to.equal('01');",
									"    pm.expect(responseJson.data.transportista).to.exist;",
									"});",
									"",
									"// Guardar ID para siguientes requests",
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('dispatch_guide_public_id', responseJson.data.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 3|sunat_beta_aFysgL4njoPCw5BXIeiwFUMfuoSxyiDDe02z7sKx32158510",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n      \"company_id\": 2,\n      \"branch_id\": 2,\n      \"destinatario_id\": 1,\n      \"serie\": \"T001\",\n      \"fecha_emision\": \"2025-09-07\",\n      \"fecha_traslado\": \"2025-09-08\",\n\n      \"cod_traslado\": \"01\",\n      \"des_traslado\": \"Venta\",\n      \"mod_traslado\": \"01\",\n      \"peso_total\": 12.5,\n      \"und_peso_total\": \"KGM\",\n      \"num_bultos\": 1,\n\n      \"partida_ubigeo\": \"150203\",\n      \"partida_direccion\": \"AV ITALIA\",\n      \"llegada_ubigeo\": \"150101\",\n      \"llegada_direccion\": \"AV LIMA\",\n\n      \"transportista_tipo_doc\": \"6\",\n      \"transportista_num_doc\": \"20000000002\",\n      \"transportista_razon_social\": \"TRANSPORTES S.A.C\",\n      \"transportista_nro_mtc\": \"0001\",\n\n      \"detalles\": [\n          {\n              \"cantidad\": 2,\n              \"unidad\": \"ZZ\",\n              \"descripcion\": \"PROD 1\",\n              \"codigo\": \"PROD1\",\n              \"peso_total\": 12.5\n          }\n      ],\n\n      \"usuario_creacion\": \"POSTMAN_TEST\"\n  }"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Guía - Traslado Entre Establecimientos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Same company transfer created\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.cod_traslado).to.equal('04');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('dispatch_guide_transfer_id', responseJson.data.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 3|sunat_beta_aFysgL4njoPCw5BXIeiwFUMfuoSxyiDDe02z7sKx32158510",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"company_id\": 2,\n    \"branch_id\": 2,\n    \"destinatario_id\": 2,\n    \"serie\": \"T001\",\n    \"fecha_emision\": \"2025-09-08\",\n    \"fecha_traslado\": \"2025-09-09\",\n    \"version\": \"2022\",\n    \"cod_traslado\": \"04\",\n    \"des_traslado\": \"Traslado entre establecimientos de la misma empresa\",\n    \"mod_traslado\": \"02\",\n    \"peso_total\": 12.5,\n    \"und_peso_total\": \"KGM\",\n    \"num_bultos\": 1,\n    \"partida\": {\n      \"ubigeo\": \"150203\",\n      \"direccion\": \"AV ITALIA\",\n      \"ruc\": \"20161515648\",\n      \"cod_local\": \"00001\"\n    },\n    \"llegada\": {\n      \"ubigeo\": \"150101\",\n      \"direccion\": \"AV LIMA\",\n      \"ruc\": \"20161515648\",\n      \"cod_local\": \"00002\"\n    },\n    \"indicadores\": [\"SUNAT_Envio_IndicadorTrasladoVehiculoM1L\"],\n    \"detalles\": [{\n      \"codigo\": \"PROD1\",\n      \"unidad\": \"ZZ\",\n      \"cantidad\": 2,\n      \"peso_total\": 12.5,\n      \"descripcion\": \"PROD 1\"\n    }],\n    \"usuario_creacion\": \"API_FINAL_TEST\"\n  }"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Guía - Traslado TRANSPORTE PRIVADO M1L (VEHÍCULOS MENORES)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Same company transfer created\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.cod_traslado).to.equal('04');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('dispatch_guide_transfer_id', responseJson.data.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 3|sunat_beta_aFysgL4njoPCw5BXIeiwFUMfuoSxyiDDe02z7sKx32158510",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n      \"company_id\": 2,\n      \"branch_id\": 2,\n      \"destinatario_id\": 1,\n      \"serie\": \"T001\",\n      \"fecha_emision\": \"2025-09-07\",\n      \"fecha_traslado\": \"2025-09-08\",\n\n      \"cod_traslado\": \"01\",\n      \"des_traslado\": \"Venta\",\n      \"mod_traslado\": \"02\",\n      \"peso_total\": 12.5,\n      \"und_peso_total\": \"KGM\",\n      \"num_bultos\": 1,\n\n      \"indicadores\": [\"SUNAT_Envio_IndicadorTrasladoVehiculoM1L\"],\n\n      \"partida_ubigeo\": \"150203\",\n      \"partida_direccion\": \"AV ITALIA\",\n      \"llegada_ubigeo\": \"150101\",\n      \"llegada_direccion\": \"AV LIMA\",\n\n      \"detalles\": [\n          {\n              \"cantidad\": 0.5,\n              \"unidad\": \"KGM\",\n              \"descripcion\": \"PROD 1\",\n              \"codigo\": \"PROD1\",\n              \"peso_total\": 0.5\n          }\n      ],\n\n      \"usuario_creacion\": \"POSTMAN_TEST\"\n  }"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Guía - Traslado CON DOCUMENTOS Y ATRIBUTOS ADICIONALES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Same company transfer created\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.cod_traslado).to.equal('04');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('dispatch_guide_transfer_id', responseJson.data.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 3|sunat_beta_aFysgL4njoPCw5BXIeiwFUMfuoSxyiDDe02z7sKx32158510",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n      \"company_id\": 2,\n      \"branch_id\": 2,\n      \"destinatario_id\": 1,\n      \"serie\": \"T001\",\n      \"fecha_emision\": \"2025-09-07\",\n      \"fecha_traslado\": \"2025-09-08\",\n\n      \"cod_traslado\": \"01\",\n      \"des_traslado\": \"Venta\",\n      \"mod_traslado\": \"01\",\n      \"peso_total\": 12.5,\n      \"und_peso_total\": \"KGM\",\n      \"num_bultos\": 1,\n\n      \"partida_ubigeo\": \"150203\",\n      \"partida_direccion\": \"AV ITALIA\",\n      \"llegada_ubigeo\": \"150101\",\n      \"llegada_direccion\": \"AV LIMA\",\n\n      \"transportista_tipo_doc\": \"6\",\n      \"transportista_num_doc\": \"20000000002\",\n      \"transportista_razon_social\": \"TRANSPORTES S.A.C\",\n      \"transportista_nro_mtc\": \"0001\",\n\n      \"documentos_relacionados\": [\n          {\n              \"tipo\": \"49\",\n              \"tipo_desc\": \"Constancia de Depósito - IVAP (Ley 28211)\",\n              \"numero\": \"00000001\"\n          }\n      ],\n\n      \"detalles\": [\n          {\n              \"cantidad\": 2,\n              \"unidad\": \"ZZ\",\n              \"descripcion\": \"PROD 1\",\n              \"codigo\": \"PROD1\",\n              \"peso_total\": 12.5,\n              \"cod_prod_sunat\": \"50161509\",\n              \"atributos\": [\n                  {\n                      \"code\": \"7020\",\n                      \"name\": \"Partida arancelaria\",\n                      \"value\": \"1701130000\"\n                  },\n                  {\n                      \"code\": \"7022\",\n                      \"name\": \"Indicador de bien normalizado\",\n                      \"value\": \"1\"\n                  }\n              ]\n          }\n      ],\n\n      \"observaciones\": \"Guía con documentos adicionales y atributos de productos\",\n      \"usuario_creacion\": \"POSTMAN_TEST\"\n  }"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Guía - Con Vehículos Secundarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Heavy load dispatch guide created\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.peso_total).to.equal(250.5);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('dispatch_guide_heavy_id', responseJson.data.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 3|sunat_beta_aFysgL4njoPCw5BXIeiwFUMfuoSxyiDDe02z7sKx32158510",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"company_id\": 2,\n    \"branch_id\": 2,\n    \"destinatario_id\": 3,  // ← Cambio: client_id → destinatario_id\n    \"serie\": \"T001\",\n    \"fecha_emision\": \"2025-09-07\",\n    \"fecha_traslado\": \"2025-09-08\",\n\n    \"cod_traslado\": \"01\",\n    \"des_traslado\": \"Venta\",\n    \"mod_traslado\": \"02\",\n    \"peso_total\": 250.500,\n    \"und_peso_total\": \"KGM\",\n    \"num_bultos\": 20,\n\n    // ← Cambio: campos planos en lugar de objetos anidados\n    \"partida_ubigeo\": \"150101\",\n    \"partida_direccion\": \"PLANTA DE PRODUCCIÓN\",\n    \"llegada_ubigeo\": \"150203\",\n    \"llegada_direccion\": \"CENTRO DE DISTRIBUCIÓN\",\n\n    // ← Cambio: campos directos del conductor\n    \"conductor_tipo\": \"Principal\",\n    \"conductor_tipo_doc\": \"1\",\n    \"conductor_num_doc\": \"44004400\",  // ← Usar DNI válido de test\n    \"conductor_licencia\": \"0001122020\",  // ← Usar licencia de test\n    \"conductor_nombres\": \"ROBERTO\",\n    \"conductor_apellidos\": \"RODRIGUEZ VALENCIA\",\n\n    // ← Cambio: vehículo principal y secundarios como arrays\n    \"vehiculo_placa\": \"VEH001\",\n    \"vehiculos_secundarios\": [\n      {\"placa\": \"VEH002\"},\n      {\"placa\": \"VEH003\"}\n    ],\n\n    \"detalles\": [\n      {\n        \"cantidad\": 200,\n        \"unidad\": \"NIU\",\n        \"descripcion\": \"CARGA INDUSTRIAL PESADA\",\n        \"codigo\": \"HEAVY001\",\n        \"peso_total\": 250.500\n      }\n    ],\n\n    \"usuario_creacion\": \"POSTMAN_TEST\"\n  }"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Consultar Guías de Remisión",
			"item": [
				{
					"name": "Listar Todas las Guías",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains dispatch guides list\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.data).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 2|sunat_beta_SROYaUQGZJ6XbH1lAO4DjjATZk05iupYDjw6onWGae97ebbf",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filtrar por Estado SUNAT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All guides are PENDIENTE\", function () {",
									"    const responseJson = pm.response.json();",
									"    const guides = responseJson.data.data;",
									"    guides.forEach(guide => {",
									"        pm.expect(guide.estado_sunat).to.equal('PENDIENTE');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides?estado_sunat=PENDIENTE",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							],
							"query": [
								{
									"key": "estado_sunat",
									"value": "PENDIENTE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Filtrar por Modalidad de Transporte",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All guides are private transport\", function () {",
									"    const responseJson = pm.response.json();",
									"    const guides = responseJson.data.data;",
									"    guides.forEach(guide => {",
									"        pm.expect(guide.mod_traslado).to.equal('02');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides?mod_traslado=02",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							],
							"query": [
								{
									"key": "mod_traslado",
									"value": "02"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener Guía Específica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains dispatch guide details\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.id).to.exist;",
									"    pm.expect(responseJson.data.company).to.exist;",
									"    pm.expect(responseJson.data.destinatario).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Procesamiento SUNAT",
			"item": [
				{
					"name": "Enviar a SUNAT - Transporte Privado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request processed\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Dispatch guide sent to SUNAT\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson.success).to.be.true;",
									"        pm.expect(responseJson.data.estado_sunat).to.be.oneOf(['PROCESANDO', 'ACEPTADO']);",
									"        ",
									"        if (responseJson.ticket) {",
									"            pm.environment.set('sunat_ticket', responseJson.ticket);",
									"        }",
									"    });",
									"} else {",
									"    pm.test(\"Error handled correctly\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson.success).to.be.false;",
									"        console.log('Error:', responseJson.message);",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 2|sunat_beta_fpFUQPooJ04zZGfgRFcV0S10XakdHk6FHvxs6AKXfcd30d0d",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/2/send-sunat",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"2",
								"send-sunat"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Estado SUNAT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request processed\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Status checked successfully\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson.success).to.be.true;",
									"        pm.expect(responseJson.data.estado_sunat).to.exist;",
									"    });",
									"} else {",
									"    pm.test(\"Error handled correctly\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson.success).to.be.false;",
									"        console.log('Status check error:', responseJson.message);",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 2|sunat_beta_fpFUQPooJ04zZGfgRFcV0S10XakdHk6FHvxs6AKXfcd30d0d",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/3/check-status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"3",
								"check-status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Generar y Descargar Archivos",
			"item": [
				{
					"name": "Generar PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"PDF generated successfully\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.true;",
									"    pm.expect(responseJson.data.id).to.exist;",
									"    pm.expect(responseJson.data.pdf_path).to.exist;",
									"    pm.expect(responseJson.data.download_url).to.exist;",
									"});",
									"",
									"pm.test(\"PDF data structure is correct\", function () {",
									"    const responseJson = pm.response.json();",
									"    const data = responseJson.data;",
									"    ",
									"    pm.expect(data.serie).to.exist;",
									"    pm.expect(data.correlativo).to.exist;",
									"    pm.expect(data.numero_documento).to.exist;",
									"    pm.expect(data.fecha_emision).to.exist;",
									"    pm.expect(data.fecha_traslado).to.exist;",
									"    pm.expect(data.peso_total).to.exist;",
									"    pm.expect(data.modalidad_traslado).to.exist;",
									"    pm.expect(data.motivo_traslado).to.exist;",
									"    pm.expect(data.destinatario).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 3|sunat_beta_aFysgL4njoPCw5BXIeiwFUMfuoSxyiDDe02z7sKx32158510",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"format\": \"A5\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/1/generate-pdf",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"1",
								"generate-pdf"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descargar XML",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Request processed\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"XML file downloaded\", function () {",
									"        pm.expect(pm.response.headers.get('Content-Type')).to.include('xml');",
									"    });",
									"} else {",
									"    pm.test(\"XML not found (expected for new guides)\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson.success).to.be.false;",
									"        pm.expect(responseJson.message).to.include('XML no encontrado');",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/dispatch-guides/{{dispatch_guide_private_id}}/download-xml",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"{{dispatch_guide_private_id}}",
								"download-xml"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descargar CDR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Request processed\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"CDR file downloaded\", function () {",
									"        pm.expect(pm.response.headers.get('Content-Disposition')).to.exist;",
									"    });",
									"} else {",
									"    pm.test(\"CDR not found (expected for unprocessed guides)\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson.success).to.be.false;",
									"        pm.expect(responseJson.message).to.include('CDR no encontrado');",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/dispatch-guides/{{dispatch_guide_private_id}}/download-cdr",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"{{dispatch_guide_private_id}}",
								"download-cdr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descargar PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request processed\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"PDF file downloaded\", function () {",
									"        pm.expect(pm.response.headers.get('Content-Type')).to.include('pdf');",
									"    });",
									"} else {",
									"    pm.test(\"PDF not found (run generate PDF first)\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson.success).to.be.false;",
									"        pm.expect(responseJson.message).to.include('PDF no encontrado');",
									"    });",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer 3|sunat_beta_aFysgL4njoPCw5BXIeiwFUMfuoSxyiDDe02z7sKx32158510",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/1/download-pdf",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"1",
								"download-pdf"
							]
						}
					},
					"response": []
				},
				{
					"name": "http://localhost:8000/api/v1/dispatch-guides/1/generate-pdf",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/v1/dispatch-guides/1/generate-pdf",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"1",
								"generate-pdf"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. Casos de Error y Validación",
			"item": [
				{
					"name": "Error - Transporte Privado Sin Conductor",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Validation errors for conductor data\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.errors).to.exist;",
									"    // Específicos errors dependen de la implementación de validación",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company_id\": 1,\n  \"branch_id\": 1,\n  \"client_id\": 1,\n  \"serie\": \"T001\",\n  \"fecha_emision\": \"2025-09-06\",\n  \"fecha_traslado\": \"2025-09-07\",\n  \n  \"cod_traslado\": \"01\",\n  \"des_traslado\": \"Venta\",\n  \"mod_traslado\": \"02\",\n  \"peso_total\": 30.0,\n  \"und_peso_total\": \"KGM\",\n  \"num_bultos\": 2,\n  \n  \"partida\": {\n    \"ubigeo\": \"150101\",\n    \"direccion\": \"ORIGEN\"\n  },\n  \"llegada\": {\n    \"ubigeo\": \"150203\",\n    \"direccion\": \"DESTINO\"\n  },\n  \n  \"vehiculo\": {\n    \"placa_principal\": \"ABC123\"\n  },\n  \n  \"detalles\": [\n    {\n      \"cantidad\": 1,\n      \"unidad\": \"NIU\",\n      \"descripcion\": \"PRODUCTO\",\n      \"codigo\": \"PROD001\",\n      \"peso_total\": 30.0\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/dispatch-guides",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Error - Transporte Público Sin Transportista",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Validation errors for transportista data\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.errors).to.exist;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company_id\": 1,\n  \"branch_id\": 1,\n  \"client_id\": 1,\n  \"serie\": \"T001\",\n  \"fecha_emision\": \"2025-09-06\",\n  \"fecha_traslado\": \"2025-09-07\",\n  \n  \"cod_traslado\": \"01\",\n  \"des_traslado\": \"Venta\",\n  \"mod_traslado\": \"01\",\n  \"peso_total\": 30.0,\n  \"und_peso_total\": \"KGM\",\n  \"num_bultos\": 2,\n  \n  \"partida\": {\n    \"ubigeo\": \"150101\",\n    \"direccion\": \"ORIGEN\"\n  },\n  \"llegada\": {\n    \"ubigeo\": \"150203\",\n    \"direccion\": \"DESTINO\"\n  },\n  \n  \"vehiculo\": {\n    \"placa_principal\": \"ABC123\"\n  },\n  \n  \"detalles\": [\n    {\n      \"cantidad\": 1,\n      \"unidad\": \"NIU\",\n      \"descripcion\": \"PRODUCTO\",\n      \"codigo\": \"PROD001\",\n      \"peso_total\": 30.0\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/dispatch-guides",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"dispatch-guides"
							]
						}
					},
					"response": []
				},
				{
					"name": "Error - Guía No Encontrada",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Error message correct\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.be.false;",
									"    pm.expect(responseJson.message).to.include('no encontrada');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/dispatch-guides/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"dispatch-guides",
								"99999"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script global",
					"console.log('Ejecutando request:', pm.info.requestName);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test script global",
					"pm.test(\"Response time is acceptable\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(10000);",
					"});",
					"",
					"pm.test(\"Response has correct headers\", function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('json');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}