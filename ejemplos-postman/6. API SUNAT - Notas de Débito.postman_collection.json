{
	"info": {
		"_postman_id": "1436b05e-17ff-452d-af29-78508ac624f2",
		"name": "6. API SUNAT - Notas de Débito",
		"description": "Colección de ejemplos para trabajar con Notas de Débito en la API de facturación SUNAT. Basado en ejemplos oficiales de Greenter.\n\n## Documentos incluidos:\n- Nota de Débito Básica (Aumento en el valor)\n- Nota de Débito por Intereses por Mora\n- Nota de Débito para Boleta\n- Nota de Débito por Penalidades\n- Catálogos y operaciones de gestión",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20633485"
	},
	"item": [
		{
			"name": "1. Crear Nota de Débito Básica",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"pm.test(\"Debit note created with correct data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.tipo_documento).to.eql(\"08\");",
							"    pm.expect(jsonData.data.cod_motivo).to.eql(\"02\");",
							"    pm.expect(jsonData.data.tipo_doc_afectado).to.eql(\"01\");",
							"});",
							"",
							"// Guardar ID para próximas requests",
							"if (pm.response.code === 201) {",
							"    var responseJson = pm.response.json();",
							"    pm.environment.set(\"debit_note_id\", responseJson.data.id);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"company_id\": 1,\n  \"branch_id\": 1,\n  \"serie\": \"FD01\",\n  \"fecha_emision\": \"2025-09-06\",\n  \"moneda\": \"PEN\",\n  \"tipo_doc_afectado\": \"01\",\n  \"num_doc_afectado\": \"F001-111\",\n  \"cod_motivo\": \"02\",\n  \"des_motivo\": \"AUMENTO EN EL VALOR\",\n  \"client\": {\n    \"tipo_documento\": \"6\",\n    \"numero_documento\": \"20123456789\",\n    \"razon_social\": \"EMPRESA DE PRUEBA SAC\",\n    \"direccion\": \"AV. EJEMPLO 123\",\n    \"ubigeo\": \"150101\",\n    \"distrito\": \"LIMA\",\n    \"provincia\": \"LIMA\",\n    \"departamento\": \"LIMA\"\n  },\n  \"detalles\": [\n    {\n      \"codigo\": \"C023\",\n      \"descripcion\": \"AUMENTO POR CONCEPTO ADICIONAL\",\n      \"unidad\": \"NIU\",\n      \"cantidad\": 2,\n      \"mto_valor_unitario\": 50.00,\n      \"porcentaje_igv\": 18.00,\n      \"tip_afe_igv\": \"10\"\n    },\n    {\n      \"codigo\": \"C02\",\n      \"descripcion\": \"AUMENTO POR RECARGO\",\n      \"unidad\": \"NIU\",\n      \"cantidad\": 2,\n      \"mto_valor_unitario\": 50.00,\n      \"porcentaje_igv\": 18.00,\n      \"tip_afe_igv\": \"10\"\n    }\n  ],\n  \"leyendas\": [\n    {\n      \"code\": \"1000\",\n      \"value\": \"SON DOSCIENTOS TREINTA Y SEIS CON 00/100 SOLES\"\n    }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/debit-notes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"debit-notes"
					]
				},
				"description": "Crear una nota de débito básica por aumento en el valor. Este es el caso más común basado en el ejemplo oficial de Greenter."
			},
			"response": []
		},
		{
			"name": "2. Crear Nota de Débito - Intereses por Mora",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Interest debit note created correctly\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.cod_motivo).to.eql(\"01\");",
							"    pm.expect(jsonData.data.des_motivo).to.eql(\"INTERESES POR MORA\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"company_id\": 1,\n  \"branch_id\": 1,\n  \"serie\": \"FD01\",\n  \"fecha_emision\": \"2025-09-06\",\n  \"moneda\": \"PEN\",\n  \"tipo_doc_afectado\": \"01\",\n  \"num_doc_afectado\": \"F001-222\",\n  \"cod_motivo\": \"01\",\n  \"des_motivo\": \"INTERESES POR MORA\",\n  \"client\": {\n    \"tipo_documento\": \"6\",\n    \"numero_documento\": \"20123456789\",\n    \"razon_social\": \"EMPRESA DE PRUEBA SAC\"\n  },\n  \"detalles\": [\n    {\n      \"codigo\": \"INT001\",\n      \"descripcion\": \"INTERESES POR PAGO TARDIO\",\n      \"unidad\": \"NIU\",\n      \"cantidad\": 1,\n      \"mto_valor_unitario\": 100.00,\n      \"porcentaje_igv\": 18.00,\n      \"tip_afe_igv\": \"10\"\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes"
					]
				},
				"description": "Crear una nota de débito por intereses de mora. Utilizada para cobrar intereses por pagos tardíos."
			},
			"response": []
		},
		{
			"name": "3. Crear Nota de Débito para Boleta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Boleta debit note created correctly\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.tipo_doc_afectado).to.eql(\"03\");",
							"    pm.expect(jsonData.data.serie).to.eql(\"BD01\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"company_id\": 1,\n  \"branch_id\": 1,\n  \"serie\": \"BD01\",\n  \"fecha_emision\": \"2025-09-06\",\n  \"moneda\": \"PEN\",\n  \"tipo_doc_afectado\": \"03\",\n  \"num_doc_afectado\": \"B001-333\",\n  \"cod_motivo\": \"03\",\n  \"des_motivo\": \"PENALIDADES/OTROS CONCEPTOS\",\n  \"client\": {\n    \"tipo_documento\": \"1\",\n    \"numero_documento\": \"12345678\",\n    \"razon_social\": \"CLIENTE NATURAL\"\n  },\n  \"detalles\": [\n    {\n      \"codigo\": \"PEN001\",\n      \"descripcion\": \"PENALIDAD POR INCUMPLIMIENTO\",\n      \"unidad\": \"NIU\",\n      \"cantidad\": 1,\n      \"mto_valor_unitario\": 50.00,\n      \"porcentaje_igv\": 18.00,\n      \"tip_afe_igv\": \"10\"\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes"
					]
				},
				"description": "Crear una nota de débito aplicada a una boleta de venta. Note la serie BD01 y tipo_doc_afectado=03."
			},
			"response": []
		},
		{
			"name": "4. Crear Nota de Débito - Penalidades",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Penalty debit note created correctly\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.cod_motivo).to.eql(\"03\");",
							"    pm.expect(jsonData.data.des_motivo).to.eql(\"PENALIDADES/OTROS CONCEPTOS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"company_id\": 1,\n  \"branch_id\": 1,\n  \"serie\": \"FD01\",\n  \"fecha_emision\": \"2025-09-06\",\n  \"moneda\": \"PEN\",\n  \"tipo_doc_afectado\": \"01\",\n  \"num_doc_afectado\": \"F001-444\",\n  \"cod_motivo\": \"03\",\n  \"des_motivo\": \"PENALIDADES/OTROS CONCEPTOS\",\n  \"client\": {\n    \"tipo_documento\": \"6\",\n    \"numero_documento\": \"20987654321\",\n    \"razon_social\": \"EMPRESA CONTRATISTA SAC\",\n    \"direccion\": \"AV. CONTRATISTAS 456\",\n    \"ubigeo\": \"150101\",\n    \"distrito\": \"LIMA\",\n    \"provincia\": \"LIMA\",\n    \"departamento\": \"LIMA\"\n  },\n  \"detalles\": [\n    {\n      \"codigo\": \"MULT01\",\n      \"descripcion\": \"MULTA POR RETRASO EN ENTREGA\",\n      \"unidad\": \"NIU\",\n      \"cantidad\": 1,\n      \"mto_valor_unitario\": 500.00,\n      \"porcentaje_igv\": 18.00,\n      \"tip_afe_igv\": \"10\"\n    },\n    {\n      \"codigo\": \"MULT02\",\n      \"descripcion\": \"PENALIDAD POR CALIDAD\",\n      \"unidad\": \"NIU\",\n      \"cantidad\": 1,\n      \"mto_valor_unitario\": 300.00,\n      \"porcentaje_igv\": 18.00,\n      \"tip_afe_igv\": \"10\"\n    }\n  ],\n  \"leyendas\": [\n    {\n      \"code\": \"1000\",\n      \"value\": \"SON NOVECIENTOS CUARENTA Y CUATRO CON 00/100 SOLES\"\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes"
					]
				},
				"description": "Crear una nota de débito por penalidades o multas contractuales. Ejemplo con múltiples conceptos de penalidad."
			},
			"response": []
		},
		{
			"name": "5. Enviar Nota de Débito a SUNAT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"SUNAT response is successful\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"    pm.expect(jsonData.data.estado_sunat).to.be.oneOf([\"ACEPTADO\", \"RECHAZADO\"]);",
							"});",
							"",
							"pm.test(\"Has XML and CDR paths when accepted\", function () {",
							"    var jsonData = pm.response.json();",
							"    if (jsonData.data.estado_sunat === \"ACEPTADO\") {",
							"        pm.expect(jsonData.data.xml_path).to.not.be.null;",
							"        pm.expect(jsonData.data.cdr_path).to.not.be.null;",
							"        pm.expect(jsonData.data.codigo_hash).to.not.be.null;",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/debit-notes/2/send-sunat",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"debit-notes",
						"2",
						"send-sunat"
					]
				},
				"description": "Enviar la nota de débito a SUNAT. Usa la variable de entorno debit_note_id que se guarda al crear una nota de débito."
			},
			"response": []
		},
		{
			"name": "6. Obtener Nota de Débito",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Debit note data is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"    pm.expect(jsonData.data).to.have.property('tipo_documento');",
							"    pm.expect(jsonData.data.tipo_documento).to.eql('08');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes/{{debit_note_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes",
						"{{debit_note_id}}"
					]
				},
				"description": "Obtener los datos de una nota de débito específica."
			},
			"response": []
		},
		{
			"name": "7. Listar Notas de Débito",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List contains debit notes\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"    pm.expect(jsonData.data).to.have.property('data');",
							"    pm.expect(jsonData.data.data).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes?company_id=1&per_page=10",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes"
					],
					"query": [
						{
							"key": "company_id",
							"value": "1"
						},
						{
							"key": "per_page",
							"value": "10"
						},
						{
							"key": "estado_sunat",
							"value": "PENDIENTE",
							"disabled": true
						},
						{
							"key": "tipo_doc_afectado",
							"value": "01",
							"disabled": true
						}
					]
				},
				"description": "Listar notas de débito con filtros opcionales. Puede filtrar por company_id, estado_sunat, tipo_doc_afectado, fechas, etc."
			},
			"response": []
		},
		{
			"name": "8. Catálogo de Motivos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Motivos catalog is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"    pm.expect(jsonData.data).to.be.an('array');",
							"    pm.expect(jsonData.data.length).to.eql(5);",
							"});",
							"",
							"pm.test(\"Contains expected motivos\", function () {",
							"    var jsonData = pm.response.json();",
							"    var motivos = jsonData.data.map(m => m.code);",
							"    pm.expect(motivos).to.include('01');",
							"    pm.expect(motivos).to.include('02');",
							"    pm.expect(motivos).to.include('03');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes/catalogs/motivos",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes",
						"catalogs",
						"motivos"
					]
				},
				"description": "Obtener el catálogo de motivos válidos para notas de débito (códigos 01, 02, 03, 10, 11)."
			},
			"response": []
		},
		{
			"name": "9. Descargar XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});",
							"",
							"if (pm.response.code === 200) {",
							"    pm.test(\"XML file is returned\", function () {",
							"        pm.expect(pm.response.headers.get('Content-Type')).to.include('xml');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes/{{debit_note_id}}/download-xml",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes",
						"{{debit_note_id}}",
						"download-xml"
					]
				},
				"description": "Descargar el archivo XML de la nota de débito (disponible después del envío a SUNAT)."
			},
			"response": []
		},
		{
			"name": "10. Descargar CDR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});",
							"",
							"if (pm.response.code === 200) {",
							"    pm.test(\"CDR ZIP file is returned\", function () {",
							"        pm.expect(pm.response.headers.get('Content-Type')).to.include('zip');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/zip"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes/{{debit_note_id}}/download-cdr",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes",
						"{{debit_note_id}}",
						"download-cdr"
					]
				},
				"description": "Descargar el archivo CDR (Constancia de Recepción) de SUNAT (disponible después de envío exitoso)."
			},
			"response": []
		},
		{
			"name": "11. Generar PDF",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"PDF generation response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"    pm.expect(jsonData.message).to.include('PDF');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"format\": \"80mm\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/v1/debit-notes/2/generate-pdf",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"debit-notes",
						"2",
						"generate-pdf"
					]
				},
				"description": "Generar el archivo PDF de la nota de débito."
			},
			"response": []
		},
		{
			"name": "12. Descargar PDF",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
							"});",
							"",
							"if (pm.response.code === 200) {",
							"    pm.test(\"PDF file is returned\", function () {",
							"        pm.expect(pm.response.headers.get('Content-Type')).to.include('pdf');",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/pdf"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/debit-notes/{{debit_note_id}}/download-pdf",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"debit-notes",
						"{{debit_note_id}}",
						"download-pdf"
					]
				},
				"description": "Descargar el archivo PDF de la nota de débito (disponible después de generar PDF)."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Configurar base_url si no existe",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}